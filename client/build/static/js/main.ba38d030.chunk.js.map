{"version":3,"sources":["components/Navbar/LoginModal.js","components/Navbar/NavigationBar.js","components/footer.js","components/landing.js","components/userProfile.js","components/posts.js","reduxcomps/actions/index.js","components/MakePost.js","http-common.js","services/user-service.js","components/add-user-component.js","components/user-component.js","components/user-list.js","reduxcomps/reducers/postReducer.js","reduxcomps/reducers/index.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["LoginModal","useState","show","setShow","handleClose","Nav","Link","onClick","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Form","Body","Group","className","controlId","Label","Control","type","placeholder","Text","Check","label","Footer","Button","variant","NavigationBar","Navbar","bg","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Landing","src","UserProfile","examplePostData","_id","user","username","profPic","tags","image","title","description","Posts","to","postList","map","post","tag","SUBMIT_POST","MakePost","dispatch","useDispatch","files","setFiles","useDropzone","accept","onDrop","acceptedFiles","file","Object","assign","preview","URL","createObjectURL","getRootProps","getInputProps","images","style","width","height","alt","name","titles","setTitle","descs","setDesc","tag1s","setTag1","tag2s","setTag2","tag3s","setTag3","display","justifyContent","alignItems","padding","border","borderRadius","onChange","e","target","value","length","marginLeft","flexDirection","marginTop","marginRight","payload","desc","tag1","tag2","tag3","axios","create","baseURL","headers","http","get","data","put","delete","Component","postReducer","state","action","combineReducers","posts","POST_STATE","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducers","subscribe","stringify","setItem","console","log","saveState","getState","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ba38d030.chunk.js","sourcesContent":["import React, { useState } from \"react\"\nimport { Modal, Button, Nav, Form } from \"react-bootstrap\"\n\nfunction LoginModal() {\n  const [show, setShow] = useState(false)\n\n  const handleShow = () => setShow(true)\n  const handleClose = () => setShow(false)\n  return (\n    <>\n      <Nav.Link onClick={handleShow}>Login</Nav.Link>\n\n      <Modal show={show} onHide={handleClose} backdrop=\"static\" keyboard={false}>\n        <Modal.Header closeButton>\n          <Modal.Title>Log In</Modal.Title>\n        </Modal.Header>\n        <Form>\n          <Modal.Body>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" />\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"remember me\" />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n\nexport default LoginModal\n","import React from \"react\"\n// import { NavLink } from \"react-router-dom\"\nimport { Navbar, Container, Nav } from \"react-bootstrap\"\nimport LoginModal from \"./LoginModal\"\nimport \"./navbar.css\"\n\nfunction NavigationBar() {\n  return (\n    // <div className=\"navbar\">\n    //   <div>\n    //     <NavLink to=\"/\">OmniConnx</NavLink>\n    //   </div>\n    //   <div>\n    //     <NavLink to=\"/prof\">profileTest</NavLink>\n    //     <NavLink to=\"/posts\">Posts</NavLink>\n    //   </div>\n    // </div>\n    <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\" className='navbar'>\n      <Container>\n        <Navbar.Brand href=\"#\">OmniConnx</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"#prof\">profileTest</Nav.Link>\n            <Nav.Link href=\"#posts\">Posts</Nav.Link>\n          </Nav>\n          <Nav>\n            <LoginModal />\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  )\n}\n\nexport default NavigationBar\n","import React from 'react';\nimport './footer.css';\n\nfunction Footer() {\n\treturn <div className=\"footer\">Powered by Omniconnx</div>;\n}\n\nexport default Footer;\n","import React from 'react'\nimport './landing.css'\n\nfunction Landing() {\n  return (\n    <div className='landing'>\n        <div className='hero'>\n            <div>\n                <h1>Welcome to Omniconnx</h1>\n                <p>some super cringy slogan</p>\n                <button>Register</button>\n            </div>\n            <img src='https://via.placeholder.com/400'></img>\n        </div>\n        <div className='blurbs'>\n            <div className='blurb'>\n                <img src='https://via.placeholder.com/100'></img>\n                <h4>awesome title</h4>\n                <p>description</p>\n            </div>\n            <div className='blurb'>\n                <img src='https://via.placeholder.com/100'></img>\n                <h4>awesome title</h4>\n                <p>description</p>\n            </div>\n            <div className='blurb'>\n                <img src='https://via.placeholder.com/100'></img>\n                <h4>awesome title</h4>\n                <p>description</p>\n            </div>\n        </div>\n        <div className='hero'>\n            <img src='https://via.placeholder.com/400'></img>\n            <div>\n                <h1>Something Cool</h1>\n                <p>some cringy advertisement</p>\n                <button>Button!</button>\n            </div>\n        </div>\n        <div className='cards'>\n            <div className='card'>\n                <img src='https://via.placeholder.com/100'></img>\n                <p>description</p>\n            </div>\n            <div className='card'>\n                <img src='https://via.placeholder.com/100'></img>\n                <p>description</p>\n            </div>\n            <div className='card'>\n                <img src='https://via.placeholder.com/100'></img>\n                <p>description</p>\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Landing","import React from 'react'\n// import './landing.css'\n\nfunction UserProfile() {\n  return (\n    <div className='userProfile'>\n        This is user profile\n    </div>\n  )\n}\n\nexport default UserProfile","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './posts.css';\n\nconst examplePostData = [\n\t{\n\t\t_id: '1234567890',\n\t\tuser: {\n\t\t\tusername: 'testUser',\n\t\t\tprofPic: 'https://via.placeholder.com/150',\n\t\t\t// ...\n\t\t},\n\t\ttags: ['tag1', 'tag2', 'tag3'],\n\t\timage: 'https://via.placeholder.com/600x250',\n\t\ttitle: 'example name of a post',\n\t\tdescription:\n\t\t\t'this is an example of what a description on our post will look like',\n\t},\n\t{\n\t\t_id: '0123456789',\n\t\tuser: {\n\t\t\tusername: 'testUser',\n\t\t\tprofPic: 'https://via.placeholder.com/150',\n\t\t\t// ...\n\t\t},\n\t\ttags: ['tag1', 'tag2'],\n\t\timage: 'https://via.placeholder.com/600x250',\n\t\ttitle: 'example name of a post number 2',\n\t\tdescription:\n\t\t\t'this is an example of what a description on our post number 2 will look like',\n\t},\n];\n\nfunction Posts() {\n\tfunction post(postList) {\n\t\treturn postList.map((post) => {\n\t\t\tconst tags = post.tags.map((tag) => {\n\t\t\t\treturn <div>{tag}</div>;\n\t\t\t});\n\t\t\treturn (\n\t\t\t\t<div className=\"post\">\n\t\t\t\t\t<div className=\"prof\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<img src={post.user.profPic}></img>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h3>-{post.user.username}</h3>\n\t\t\t\t\t\t\t<h4>{post.title}</h4>\n\t\t\t\t\t\t\t<div className=\"tags\">{tags}</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{post.image ? <img src={post.image}></img> : ''}\n\t\t\t\t\t<p>{post.description}</p>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t}\n\treturn (\n\t\t<div className=\"posts\">\n\t\t\t<NavLink className=\"createPost\" to=\"/makepost\">\n\t\t\t\t+ Create A Post\n\t\t\t</NavLink>\n\t\t\t<div className='displayPosts'>{post(examplePostData)}</div>\n\t\t</div>\n\t);\n}\n\nexport default Posts;\n\n// <button onClick={post({\n//     user:{session.user},\n//     tags:[tag1, tag2],\n//     title:'example name of a post number 2',\n//     image:'./place',\n//     description:'this is an example of what a description on our post number 2 will look like',\n// })}>\n//     post\n// </button>\n","export const SUBMIT_POST = 'SUBMIT_POST';\n\nexport const submitPost = (title, desc, image, tag1, tag2, tag3) => {\n\treturn {\n\t\ttype: SUBMIT_POST,\n\t\tpayload: {\n\t\t\ttitle,\n\t\t\tdesc,\n\t\t\timage,\n\t\t\ttag1,\n\t\t\ttag2,\n\t\t\ttag3,\n\t\t},\n\t};\n};\n","import React, { useDropzone } from 'react-dropzone';\nimport { useState } from 'react';\nimport './MakePost.css';\n\n// Redux imports\n\nimport { useDispatch } from 'react-redux';\nimport { submitPost } from '../reduxcomps/actions';\nfunction MakePost() {\n\tconst dispatch = useDispatch();\n\tconst [files, setFiles] = useState([]);\n\tconst { getRootProps, getInputProps } = useDropzone({\n\t\taccept: 'image/*',\n\t\tonDrop: (acceptedFiles) => {\n\t\t\tsetFiles(\n\t\t\t\tacceptedFiles.map((file) =>\n\t\t\t\t\tObject.assign(file, {\n\t\t\t\t\t\tpreview: URL.createObjectURL(file),\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t});\n\tconst images = files.map((file) => (\n\t\t<div key={file.name}>\n\t\t\t<div>\n\t\t\t\t<img\n\t\t\t\t\tsrc={file.preview}\n\t\t\t\t\tstyle={{ width: 200, height: 200 }}\n\t\t\t\t\talt=\"preview\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t));\n\n\t// For Redux useState variables\n\n\tconst [titles, setTitle] = useState('');\n\tconst [descs, setDesc] = useState('');\n\t// const [image, setImage] = useState('');\n\tconst [tag1s, setTag1] = useState('');\n\tconst [tag2s, setTag2] = useState('');\n\tconst [tag3s, setTag3] = useState('');\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: 'flex',\n\t\t\t\tjustifyContent: 'center',\n\t\t\t\talignItems: 'center',\n\t\t\t\tpadding: '2rem 4rem',\n\t\t\t}}\n\t\t\tclassName=\"main\"\n\t\t>\n\t\t\t<form className=\"form\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t// className=\"text\"\n\t\t\t\t\tplaceholder=\"Title...\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: '25vw',\n\t\t\t\t\t\tborder: '1px #DDDDDD solid',\n\t\t\t\t\t\theight: 25,\n\t\t\t\t\t\tborderRadius: 6,\n\t\t\t\t\t}}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetTitle(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<textarea\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"text\"\n\t\t\t\t\tplaceholder=\"Text (optional)\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tsetDesc(e.target.value);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\n\t\t\t\t<div {...getRootProps()} className=\"img-input\">\n\t\t\t\t\t<input {...getInputProps()} />\n\t\t\t\t\t{files.length !== 0 ? (\n\t\t\t\t\t\timages\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<p>Drop files here or </p>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\twidth: '5vw',\n\t\t\t\t\t\t\t\t\theight: '3vh',\n\t\t\t\t\t\t\t\t\tmarginLeft: '4%',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tclassName=\"button-hover\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t\t<div\n\t\t\t\t\tstyle={{ display: 'flex', flexDirection: 'row', marginTop: '4vh' }}\n\t\t\t\t>\n\t\t\t\t\t<h3>Tags</h3>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"tags\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetTag1(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"tags\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetTag2(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tclassName=\"tags\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetTag3(e.target.value);\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"button-bottoms\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginRight: '1vw',\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tclassName=\"button-hover\"\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\tCancel{' '}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"button-hover\"\n\t\t\t\t\t\tonClick={(e) => {\n\t\t\t\t\t\t\tdispatch(submitPost(titles, descs, images, tag1s, tag2s, tag3s));\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{' '}\n\t\t\t\t\t\tSubmit{' '}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</div>\n\t);\n}\nexport default MakePost;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-common\";\n\nclass UserDataService {\n  getAll() {\n    return http.get(\"/user\");\n  }\n\n  get(id) {\n    return http.get(`/user/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/user/signup\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/user/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/user/${id}`);\n  }\n/*\n  deleteAll() {\n    return http.delete(`/users`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/users?title=${title}`);\n  }\n  */\n}\n\nexport default new UserDataService();","import React, { Component , useState} from \"react\";\nimport UserDataService from \"../services/user-service\";\nimport { Modal, Button, Nav, Form } from \"react-bootstrap\"\n\nexport default class AddUser extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    //this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveUser = this.saveUser.bind(this);\n    this.newUser = this.newUser.bind(this);\n\n    this.state = {\n      id: null,\n      username: \"\",\n      submitted: false\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  saveUser() {\n    var data = {\n      username: this.state.username,\n    };\n\n    UserDataService.create(data)\n      .then(response => {\n        console.log(response.data.username)\n        this.setState({\n          id: response.data.id,\n          username: response.data.username,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newUser() {\n    this.setState({\n      id: null,\n      username: \"\",\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      // <div className=\"submit-form\">\n      //   {this.state.submitted ? (\n      //     <div>\n      //       <h4>You submitted successfully!</h4>\n      //       <button className=\"btn btn-success\" onClick={this.newUser}>\n      //         Add\n      //       </button>\n      //     </div>\n      //   ) : (\n      //     <div>\n      //       <div className=\"form-group\">\n      //         <label htmlFor=\"username\">Username</label>\n      //         <input\n      //           type=\"text\"\n      //           className=\"form-control\"\n      //           id=\"username\"\n      //           required\n      //           value={this.state.username}\n      //           onChange={this.onChangeUsername}\n      //           name=\"username\"\n      //         />\n      //       </div>\n\n      //       <button onClick={this.saveUser} className=\"btn btn-success\">\n      //         Submit\n      //       </button>\n      //     </div>\n      //   )}\n      // </div>\n      <>\n        <Form>\n          <Modal.Body>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter username\" id=\"username\"\n                required\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                name=\"username\"/>\n              <Form.Text className=\"text-muted\">\n                We'll never share your email with anyone else.\n              </Form.Text>\n            </Form.Group>\n\n            <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" />\n            </Form.Group>\n            <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n              <Form.Check type=\"checkbox\" label=\"remember me\" />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.saveUser} className=\"btn btn-success\">\n              Submit\n            </Button>\n          </Modal.Footer>\n        </Form>\n    </>\n    );\n  }\n\n}\n\n","import React, { Component } from \"react\";\nimport UserDataService from \"../services/user-service\";\n\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n    //this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.updateUser = this.updateUser.bind(this);\n    //this.deleteUser = this.deleteUser.bind(this);\n\n    this.state = {\n      currentUser: {\n        id: null,\n        username: \"\",\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getUser(this.props.match.params.id);\n  }\n\n  onChangeUsername(e) {\n    const username = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentUser: {\n          ...prevState.currentUser,\n          username: username\n        }\n      };\n    });\n  }\n\n  getUser(id) {\n    UserDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentUser: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n  updateUser() {\n    UserDataService.update(\n      this.state.currentUser.id,\n      this.state.currentUser\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The user was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  \n/*\n\n  deleteTutorial() {    \n    UserDataService.delete(this.state.currentUser.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/users')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n     <button\n              className=\"badge badge-danger mr-2\"\n              onClick={this.deleteUser}\n            >\n              Delete\n            </button>\n\n            <button\n              type=\"submit\"\n              className=\"badge badge-success\"\n              onClick={this.updateUser}\n            >\n              Update\n            </button>\n*/\n  \n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div>\n        {currentUser ? (\n          <div className=\"edit-form\">\n            <h4>User</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"username\"\n                  value={currentUser.username}\n                  onChange={this.onChangeUsername}\n                />\n              </div>\n\n            </form>\n\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a User...</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n\n","import React, { Component } from \"react\";\nimport UserDataService from \"../services/user-service\";\nimport { Link } from \"react-router-dom\";\n\nexport default class UserList extends Component {\n  constructor(props) {\n    super(props);\n    //this.onChangeSearchFirstName = this.onChangeSearchFirstName.bind(this);\n    this.retrieveUsers = this.retrieveUsers.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveUser = this.setActiveUser.bind(this);\n    //this.removeAllUsers = this.removeAllUsers.bind(this);\n    //this.searchUsername = this.searchUsername.bind(this);\n\n    this.state = {\n      users: [],\n      currentUser: null,\n      //array of Users\n      currentIndex: -1\n      //searchUsername: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.retrieveUsers();\n  }\n\n  /*\n  onChangeSearchTitle(e) {\n    const searchUser = e.target.value;\n\n    this.setState({\n      searchUser: searchUsername\n    });\n  }\n*/\n\n  retrieveUsers() {\n    UserDataService.getAll()\n      .then(response => {\n        this.setState({\n          users: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveUsers();\n    this.setState({\n      currentUser: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveUser(user, index) {\n    this.setState({\n      currentUser: user,\n      currentIndex: index\n    });\n  }\n/*\n  removeAllUsers() {\n    SearchDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  searchUser() {\n    SearchUser.findByName(this.state.searchUser)\n      .then(response => {\n        this.setState({\n          users: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n*/\n  \n  render() {\n    //const { searchUsername, users, currentUser, currentIndex } = this.state;\n    const { users, currentUser, currentIndex } = this.state;\n\n/*\n<div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by name\"\n              value={searchUsername}\n              onChange={this.onChangeSearchUser}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.searchUsername}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n           <ul className=\"list-group\">\n            {users &&\n              users.map((user, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveUser(user, index)}\n                  key={index}\n                >\n                  {user.username}\n                </li>\n              ))}\n          </ul>\n          <button\n            className=\"m-3 btn btn-sm btn-danger\"\n            onClick={this.removeAllUsers}\n          >\n            Remove All\n          </button>\n\n*/\n    return (\n      <div className=\"list row\">\n       Search\n        <div className=\"col-md-6\">\n          <h4>User List</h4>\n\n          <ul className=\"list-group\">\n            {users &&\n              users.map((user, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveUser(user, index)}\n                  key={index}\n                >\n                  {user.username}\n                </li>\n              ))}\n          </ul>\n\n        </div>\n        <div className=\"col-md-6\">\n          {currentUser ? (\n            <div>\n              <h4>User</h4>\n              <div>\n                <label>\n                  <strong>Username:</strong>\n                </label>{\" \"}\n                {currentUser.username}\n              </div>\n\n              <Link\n                to={\"/user/\" + currentUser.id}\n                className=\"badge badge-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on a User...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import { SUBMIT_POST } from '../actions';\n\nconst postReducer = (state = [], action) => {\n\tswitch (action.type) {\n\t\tcase SUBMIT_POST:\n\t\t\tconst { title, desc, image, tag1, tag2, tag3 } = action.payload;\n\t\t\treturn [...state, { title, desc, image, tag1, tag2, tag3 }];\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nexport default postReducer;\n","import { combineReducers } from 'redux';\nimport postReducer from './postReducer';\n\nexport default combineReducers({\n\tposts: postReducer,\n});\n","import \"./App.css\"\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\nimport NavigationBar from \"./components/Navbar/NavigationBar\"\nimport Footer from \"./components/footer\"\nimport Landing from \"./components/landing\"\nimport UserProfile from \"./components/userProfile\"\nimport Posts from \"./components/posts\"\nimport MakePost from \"./components/MakePost\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport AddUser from \"./components/add-user-component\";\nimport User from \"./components/user-component\";\nimport UserList from \"./components/user-list\";\n// Redux\nimport { createStore } from \"redux\"\nimport { Provider } from \"react-redux\"\nimport reducers from \"./reduxcomps/reducers\"\n\nconst POST_STATE = \"POST_STATE\"\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(POST_STATE)\n    if (serializedState === null) {\n      return undefined\n    }\n    return JSON.parse(serializedState)\n  } catch (err) {\n    return undefined\n  }\n}\n\nexport const saveState = (state) => {\n  try {\n    const serializedState = JSON.stringify(state)\n    localStorage.setItem(POST_STATE, serializedState)\n  } catch (err) {\n    console.log(\"Error saving data:\" + err)\n  }\n}\n\nconst persistedState = loadState()\nconst store = createStore(reducers, persistedState)\nstore.subscribe(() => {\n  saveState(store.getState())\n})\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div>\n          \n        </div>\n        <div className=\"App\">\n          <NavigationBar />\n          <Switch>\n            {/* <Route exact path={[\"/\", \"/user\"]} component={UserList} /> */}\n            {/* <Route exact path=\"/signup\" component={AddUser} /> */}\n            <Route exact path=\"/ \" component={Landing} />\n            <Route path=\"/prof\" component={UserProfile} />\n            <Route path=\"/posts\" component={Posts} />\n            <Route path=\"/makepost\" component={MakePost} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' }\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}